{% import "./../utils.njk" as utils %}
<!--
tabs:
    properties={ items: [], panels: [] },
    modifier={ block: [] },
    state={},
    aria={}
-->
{% macro tabs(properties={ items: [], panels: [] }, modifier={}, state={}, aria={}) -%}
<ul class="tn-tabs{{ modifier.block | modifier('tabs') }}{{ state | state }}"{{ aria | aria }} role="tablist">
{%- set panels %}{% endset -%}
{%- for item in properties.items %}
    {%- set _id = utils.id() %}
    <li class="tn-tabs__item{{ modifier.item | modifier('tabs__item') }}">
        {%- set link_disabled = item.disabled or false %}
        {%- set link_selected = item.selected or false %}
        {#- {%- set state = { selected: link_selected, disabled: link_disabled } %} #}
        {%- set aria = { controls: _id } %}
        {%- if item.selected %}
            {%- set aria = { controls: _id, selected: link_selected } %}
        {%- elif item.disabled %}
            {%- set aria = { controls: _id, disabled: link_disabled } %}
        {%- endif %}
        <a class="tn-tabs__link{{ modifier.link | modifier('tabs__link') }}{{ state | state }}"{{ aria | aria }}{{ ' href="#'+ _id +'"' if link_disabled === false }} role="tab">{{ item.label }}</a>
    </li>
    {#- save panels content #}
    {%- set panel = properties.panels[loop.index0] %}
    {%- set panel_props = {
        content: panel.content,
        id: _id
    } %}
    {%- set panel_is_expanded = item.selected or "false" %}
    {%- set panel_aria = {
        expanded: panel_is_expanded
    } %}
    {%- if properties.panels %}
    {%- set panels %}
{{ panels }}
{{ tabs_panel(panel_props,aria=panel_aria) }}
    {%- endset %}
    {%- endif %}
{%- endfor %}
</ul>
{{ panels | trim }}
{%- endmacro %}

{% macro tabs_panel(properties={}, modifier={}, state={}, aria={}) -%}
<div class="tn-tabs__panel{{ modifier.panel | modifier('tabs__panel') }}{{ state | state }}"{{ aria | aria }} id="{{properties.id}}" role="tabpanel">
    {{ properties.content }}
</div>
{%- endmacro %}
