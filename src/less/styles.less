@import url(https://fonts.googleapis.com/css?family=Dosis:400,500,600);
@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,700,300,400italic,600);


@hytech-path: "../";

@import "@{bower-path}/bootstrap/less/bootstrap";
@import (less) "@{bower-path}/select2/select2.css";


// Globals
@import "./globals/_variables";
@import (optional) "./globals/_resource-paths";
@import "./globals/_utils";
@import "./overwrites/__overwrites.less";
@import "./components/_layout-section";

// Pattern Section
//
// Doing a test to show the pattern section
//
// Pattern 1
@import "./patterns/_test.less";


// Alerts, Errors & Notifications
//
// Messaging within the application is color-coded to emphasize the level of urgency, but the goal is to limit the number of colors overall to reduce cognitive load. In some cases alerts will allow for dismissal and in other cases alerts must be acted upon in order to complete a task. The color-coded system should allow at-a-glance understanding of allowable actions.
//
// Component 1
@import "./overwrites/_alert.less";


// Buttons
//
// Button and Button Links are used to indicate primary, secondary and tertiary actions on a page.  Used in patterns like page headers, modals and wizards. See Patterns & Layouts for examples of usage.
//
// Component 2
@import './overwrites/_buttons.less';
@import "./components/_forms-toggle";
@import "./components/_back-to-top.less";


// Cards
//
// Cards are used to display information in a visual, scannable manner. Use in scenarios when users want to associate an image with data, such as a Project or Site, or in association with user accounts where it is helpful to associate an image with a person using the system.
//
// Component 3
@import "./components/_usercards";
@import "./components/_data.less";
@import "./components/_data-card.less";


// Contextual Menu
//
// The “more” contextual menu is used with Cards or Tables when there is additional functionality available for the data shown in the Card or Table row, and trying to expose that functionality would clutter the interface.
//
// Component 4
@import './overwrites/_dropdowns.less';


// Feedback Form 
//
// Standardized feedback form pattern. Click feedback button below to open form.
//
// Component 5
@import "./components/_feedback-form";


// Form Elements
//
// Form Elements include the layout of a field itself, checkboxes, radio buttons and states of a field.  Use these components along with inline help and error state treatements for any form design.
//
// Component 6
@import './overwrites/_forms.less';
@import "./components/_forms-hint-text";
@import "./components/_forms-checkboxes";
@import "./components/_forms-radiobuttons";
@import "./components/_forms-readonly";


// Help and Validation 
//
// To aid Builder users we have established different levels of help and help interaction patterns to address specific interaction and feedback needs.
//
// Component 7
@import "./components/_forms-criticalerroravoidance.less";
@import "./components/_forms-charactercounter.less";
@import "./components/_forms-validationandhelp.less";
@import "./components/_forms-help.less";


// Icons
//
// Icons are used throughout the UI to save space, allow for visual clarity and focus, and for fun.  Icons can be used adaptively if desired, but at this point are used more as visual elements within other components.
//
// Component 8
@import "./components/_icons";


// Lists
//
// Use a Listgroup when data is meant to show in a single column
//
// Component 9
@import './overwrites/_listgroup.less';


// Loading Spinner
//
// Component 10
@import "./components/_spinner.less";


// Localization
//
// The Localization component is used when any content needs to allow for translation into a multiple languages or currencies.
//
// Component 11
@import "./components/_locals-editor";


// Modal
//
// Modals are used throughout YaaS to facilitate in-context tasks, wizards, and interactive notifications.   Use the Modal component in conjunction with other compoents to build out whatever patterns needed for people to complete tasks quickly and efficiently. At a minimum a modal should have a close action (X), otherwise buttons or actions are at the discretion of the team and task at-hand.
//
// Component 12
@import './overwrites/_modal.less';


// Page Content Panels
//
// Panels are used to set apart the content or form elements on a page from the background.  Place patterns and interactions within panels on your pages to achieve visual focus and separation for the tasks at-hand. Used on every page.
//
// Component 13
@import './overwrites/_panels.less';



// Page Header
//
//
//
// Component 14
@import './overwrites/_navs.less';
@import "./components/_sticky_navbar.less";
@import './overwrites/_navbar.less';



// Pagination
//
// Use pagination components in conjunction with Tables (recommended) or Cards (if needed) to allow for more efficient performance and quick access to specific records in the overall data set.
//
// Component 15
@import './overwrites/_pagination.less';


@import "./components/_products.less"; 


// Status Indicators
//
// <p class="kss-lead">Labels should be uses within cards and list rows while Pills should be used within Detail panels to give the status more prominence.</p>
// <p>Colors may be used to help highlight various statuses or states. The following colors should be used as a standard, and are reserved for these statues or states.</p>
//	<ul>
// 		<li><b>Green</b> - confirmation, approval, generally positive</li>
// 		<li><b>Orange</b> - warning, action can be taken</li>
// 		<li><b>Red</b> - error, non-approval, generally negative, action can't be taken</li>
// 		<li><b>Grey</b> - inactive</li>
//	</ul>
//
// <p><i>Note that information, statuses or states should not be communicated by color alone. It is recommended a label always accompany a color.</i></p>
//
// Component 16
@import './overwrites/_labels.less';


// Tables
//
// Tables are used across UI modules to display data that is best viewed and manipulated in tabular format for quick sorting, filtering and efficient scanning. The table component is fully responsive so that even tabular data is easily readable at smaller inflection points.
//
// Component 17
@import './overwrites/_tables.less';


// Tabs
//
// Use Tabs when you need to organize and group information on page while reducing information density.
//
// Component 18
@import './overwrites/_tabs.less';



// Thumbnail Zoom
//
// If a thumbnail image or images are used it is recommended you allow someone to get a larger view. Use this component to allow a larger view.
//
// Component 19
@import "./components/_thumbnail-zoom";

// Tour Bubble
//
// Use the Tour UI component to put together a comprehensive overview of UIs to new visitors.
//
// Component 20
@import './overwrites/_popover.less';



// Tooltip and Popover
//
// Component 21
@import "./components/_tooltip-popover";



// Trees
//
// The tree component is used to display and manipulate hierarchical data, e.g. product categories.
//
// Component 22
@import "./components/_tree";



// Atoms
//
// Micro CSS things
//

@import "./components/_atoms";


// Vendor
@import "./vendor/_select2";
@import "./components/_tabs-scrollable.less";
@import "./globals/_shame";
