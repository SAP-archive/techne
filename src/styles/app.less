@nice-blue: #5B83AD;

@base: 5px;
@filler: @base * 2;
@other: @base + @filler;







body {
    background: @nice-blue;
    &.is-loaded {
        background: black;
        @media print {
            background: white;
            
        }
    }
}
button {
    min-height: @other;
}


//Namespaces and Accessors
#bundle {
  .button {
    display: block;
    border: 1px solid black;
    background-color: grey;
    &:hover {
      background-color: white
    }
  }
  .tab { 
    color: red;
  }
  .citation { 
    color: pink;
  }
}
#header a {
  color: orange;
  #bundle > .button;
}


//Selectors
// Variables
@my-selector: banner;

// Usage
.@{my-selector} {
  font-weight: bold;
  line-height: 40px;
  margin: 0 auto;
  &__content {
    color: red;
  }
  &__action {
    color: black;
    .@{my-selector}--optional {
      background: gray;
    }
  }
}

//Variable Names
@fnord:  "I am fnord.";
@var:    "fnord";
a:after {
  content: @@var;  
}


//Lazy Loading
.lazy-eval {
  width: @b;
}
.lazy-eval-scope {
  width: @b;
  @a: 9%;
}

@b: @a;
@a: 9%;


//EXTEND
.inline {
  display: inline;
}

.widget {
  color: green;
  &.alt {
    color: gray;
  }
  //!!!!!******!!!!!!******
  &--inline:extend(.widget all) {
    outline: solid 1px red;  
    .inline;
  }
}

//mixin??
.class() {
  color: red;
  a {
    color: blue;
      .icon {
        padding-left: 50px; 
      }
  }
}

.btn {
  .class;
  
}


//Passing Rulesets to Mixins
// declare detached ruleset
@detached-ruleset: { background: red; };
.top {
  @detached-ruleset();
  
}

