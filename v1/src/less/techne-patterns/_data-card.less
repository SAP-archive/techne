// Cards on pages
//
// At Desktop and Tablet inflections, it's recommended to show up to 25 cards before pagination. At the Mobile inflection, it's recommended to show up to 5 cards before pagination. When used as a summary for a complete list on a mixed content page, display 5 cards before “See All.”
//
// Pattern 4.1

// Table summary for cards on mixed pages
//
//Use cards summaries in order to give users quick access to multiple data type lists on a mixed page. When the number of entries is more than 5, provide a “See All” link to either show the complete list within that page or to go to another page and display the full list.
//
//
// Markup:
// <ul class="dataCards {$modifiers}">
//  <li class="y-add dataCard ">
//     <button  type="button" class="y-add-btn">
//         <span class="hyicon hyicon-add"></span>
//         New Button
//     </button>
//  </li>
//  <li class="dataCard">
//    <div class="cardRow cardRowClickable">
//        <p class="primaryData">
//          Primary Value
//        </p>
//        <p class="secondaryData">
//          You can click me!
//        </p>
//        <span class="label label-success">
//          Active Label
//        </span>
//    </div>
//  </li>
//  <li class="dataCard">
//    <div class="cardRow cardRowClickable">
//        <p class="primaryData">
//          Primary Value
//        </p>
//        <p class="secondaryData">
//          You can click me!
//        </p>
//        <span class="label label-success">
//          Active Label
//        </span>
//    </div>
//  </li>
//  <li class="dataCard">
//    <div class="cardRow cardRowClickable">
//        <p class="primaryData">
//          Primary Value
//        </p>
//        <p class="secondaryData">
//          You can click me!
//        </p>
//        <span class="label label-success">
//          Active Label
//        </span>
//    </div>
//  </li>
//  <li class="dataCard">
//    <div class="cardRow">
//        <p class="primaryData">
//          Primary Value
//        </p>
//        <p class="secondaryData">
//          You can't click me, I'm static!
//        </p>
//          <span class="label label-default">
//            Default Label
//          </span>
//    </div>
//  </li>
//  <li class="dataCard">
//    <div class="cardRow cardRowDisabled">
//        <p class="primaryData">
//          Primary Value
//        </p>
//        <p class="secondaryData">
//          You can't click me, I'm disabled!
//        </p>
//        <p class="statusDataValue">
//          <span class="active">
//            Active
//          </span>
//        </p>
//    </div>
//  </li>
// </ul>
// <div class="dataCard-seeall">
//   <button class="btn btn-link">
//         <span>See All</span>
//         <span class="hyicon hyicon-chevron"></span>
//     </button>
// </div>
//
// .dataCards-singleColumn - Force the card layout to stay in one column. Built to be used within a existing grid column.
//
// Pattern 4.2

// Grouped Cards with Section Headlines
//
// In some cases it is useful to group data cards on a single page with clear section/sub-section headings. Also it may be useful to nest such groups and allow the display to scale gracefully. In these cases please use this modifier to the data card component.
//
// Markup:
// <div class="dataCards dataCards-grouped dataCards-singleColumn">
//  <div class="dataCard-heading">
//    <div class="cardRow">
//      <h3>Section Headline</h3>
//     </div>
//  </div>
//  <label class="dataCard" for="selectableCardDemo">
//    <span class="cardRow cardRowClickable">
//           <span class="display-inline-block dataCard-select">
//               <span class="checkbox">
//                   <input type="checkbox" id="selectableCardDemo" checked />
//                   <label for="selectableCardDemo"></label>
//               </span>
//           </span>
//           <span class="display-inline-block">
//               <p class="primaryData">Primary Value</p>
//               <p class="secondaryData">Secondary Data</p>
//           </span>
//       </span>
// </label>
//   <label class="dataCard" for="selectableCardDemo2">
//       <span class="cardRow cardRowClickable">
//           <span class="display-inline-block dataCard-select">
//              <span class="checkbox">
//                  <input type="checkbox" id="selectableCardDemo2" />
//                  <label for="selectableCardDemo2"></label>
//              </span>
//          </span>
//          <span class="display-inline-block">
//              <p class="primaryData">Primary Value</p>
//              <p class="secondaryData">Secondary Data</p>
//          </span>
//       </span>
// </label>
// </div>
// <div class="dataCards dataCards-grouped dataCards-singleColumn">
//  <div class="dataCard-heading">
//    <div class="cardRow">
//      <h3>Section 2 Headline</h3>
//     </div>
//  </div>
//  <label class="dataCard" for="selectableCardDemo3">
//    <span class="cardRow cardRowClickable">
//          <span class="display-inline-block dataCard-select">
//              <span class="checkbox">
//                  <input type="checkbox" id="selectableCardDemo3"/>
//                  <label for="selectableCardDemo3"></label>
//              </span>
//          </span>
//          <span class="display-inline-block">
//              <p class="primaryData">Primary Value</p>
//              <p class="secondaryData">Secondary Data</p>
//           </span>
//       </span>
// </label>
//   <label class="dataCard" for="selectableCardDemo4">
//       <span class="cardRow cardRowClickable">
//           <span class="display-inline-block dataCard-select">
//               <span class="checkbox">
//                   <input type="checkbox" id="selectableCardDemo4" checked  />
//                   <label for="selectableCardDemo4"></label>
//               </span>
//           </span>
//           <span class="display-inline-block">
//               <p class="primaryData">Primary Value</p>
//               <p class="secondaryData">Secondary Data</p>
//           </span>
//       </span>
// </label>
// </div>
//
// Pattern 4.3

.dataCards {
    display: flex;
    align-items: stretch;
    flex-wrap: wrap;
    flex: 0 1 auto;
    flex-direction: row;
    flex-shrink: 0;
    position: relative;
    padding: 0;

    @media (max-width:@screen-xs-max) {
        flex-direction: column;
    }

    .cardRow {
        border-top: 1px solid transparent;

        &.cardRowClickable {
            &:hover, 
            &:focus {
                border-top: 1px solid @cards-shadow-color;
            }
        }
    }

    // Modifier for Datacard Lists with multiple sections
    &.dataCards-grouped {
        margin-bottom: 20px;

        .dataCard{
            margin-bottom: 0px;
            margin-right: 0px;
            border-top: none !important;
            border-right: 1px solid @cards-border-color;
            border-left: 1px solid @cards-border-color;
            box-shadow: 0 0px 0 @cards-shadow-color;

            .cardRow {
                &.cardRowClickable {
                    border: 1px solid transparent;

                    &:hover,
                    &:focus {
                        border-top: 1px solid @cards-shadow-color;
                    }
                }
            }

        }

    }

    &.dataCards-singleColumn {
        display: block;

        .cardRow,
        .dataCard {
            width: 100%;
        }

        .y-add {
            margin-bottom: 10px;
        }
    }

    &.dataCards-grid {
        margin-left: 1%;
        margin-right: 1%;  
    }
}

a.dataCard {
    transition: background 0.05s ease-in-out;
}

.dataCard {
    width: 100%;
    padding: 0;
    background: transparent;
    display: flex;
    cursor: default;
    overflow: visible !important;
    margin-bottom: 7px;
    margin-top: 0;
    transition: all 0.1s ease-in-out 0s;

    &:last-child {
        margin-bottom: 7px;
    }

    .y-add-btn {
        height: auto;
    }

    //sm display
    @media (min-width:@screen-sm-min) and (max-width:@screen-sm-max) {
        width: 49.5%;
        margin-right: 1%;

        &:nth-child(2n) {
            margin-right: 0;
        }

        // remove padding when cards are in panels
        .panel & {
            width: 50%;
            margin: 0;
        }
    }

    //md display
    @media (min-width:@screen-md-min) {
        width: 32.888888889%;
        margin-right: 0.6666666667%;

        &:nth-child(3n) {
            margin-right: 0;
        }

        // remove padding when cards are in panels
        .panel & {
            width: 33%;
            margin: 0;
        }
    }

    a&:hover *,
    a&:focus * {
        color: #000 !important;
    }

    .panel > .list-group .list-group-item& {
        border-width: 1px;
    }

    .checkbox input,
    .checkbox label {
        width: auto;
    }

    .cardRow {
        border: 1px solid @body-bg !important;
        height: auto;
        padding: 13px;
        background: #fff;
        width: 100%;
        flex: 1;
        transition: all 0.1s ease-in-out 0s;

        .hyicon-remove {
            color: @default-red;
        }

        &.cardRowClickable {
            cursor: pointer;
            display: block;

            // Hover state
            &:hover,
            &:focus {
                background-color: #fff;
                box-shadow: 0 0 10px @cards-shadow-color;
                color: #555555;
                margin-top: -2px;
                margin-bottom: 2px;
                z-index: 5;

                & * {
                    color: @default-blue;
                }
            }

            &:active {
                background-color: @default-greyblue-500;
            }

            .primaryData {
                color: @default-blue;
            }
        }

        &.cardRowDisabled {
            background-color: fade(@default-greyblue, 15%);
            user-select: none;

            & *{
                color: fade(@default-greyblue, 70%);
            }

        }
    }

    .cardRow > .label {
        padding-left: 0px;
        background: transparent;
    }

    .cardRow .radio {
        margin-top: 3px;
    }


    .actions {
        padding-top: 6px;
    }

    .cardRow label {
        float: left;
        width: 78%;
    }

    .actions .hyicon {
        font-size: 33px;
        color: @btn-warning-color;
        vertical-align: top;
    }

    .dataCard .hyicon-remove {
        color: @default-red;
    }

}

.dataCard-heading {
    .dataCard();
    box-shadow: 0 0 0;
    width: 100%!important;
    margin-bottom: 0;
    border-bottom: none; 

    h3{
        margin-top: 10px;
        font-weight: normal;
    }
}

.dataCard-seeall {
    text-align: center;
    background: none;
    font-weight: bold;
    
    .btn {
        font-weight: bold;
    }

}

.cardCalloutHeader {
    color: @white;
    padding: 13px;
    background-color: @default-greyblue;
}
//to make column with avatar occupy only needed space 110px, not more
.card_avatar--max-width{
    max-width: 110px;
}
