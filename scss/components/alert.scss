@import "../core/settings";
@import "../core/mixins";
@import "../core/functions";
@import "../components/mixins";

/*!
.tn-alert+(--warning. --error)
    .tn-alert__action
*/
$block: ns(alert);

.#{$block} {
    //SETTINGS
    $tn-alert-background-color: tn-color(text, 3) !default;
    $tn-alert-background-color--warning: tn-color(status, 2) !default;
    $tn-alert-background-color--error: tn-color(status, 3) !default;
    $tn-alert-color: tn-color(text-inverse, 1) !default;
    $tn-alert-border-color: tn-color(neutral, 2) !default;
    $tn-alert-height: tn-space(13) !default;
    $tn-alert-action--clerance: 50px;

    // Block
    color: $tn-alert-color;
    border: solid 1px $tn-alert-border-color;
    background-color: $tn-alert-background-color;
    min-height: $tn-alert-height;
    padding: tn-space(s);
    // padding-right: $tn-alert-action--clerance;

    // Element
    // &__action {
    //     float: right;
    //     margin: -(tn-space(s));
    //     margin-right: -$tn-alert-action--clerance;
    //     .tn-button{
    //       color: tn-color(text-inverse, 1);
    //       min-height: $tn-alert-height;
    //       &:hover,
    //       &:active,
    //       &:focus{
    //         color: tn-color(text-inverse, 1);
    //       }
    //     }
    // }
    &__action {
        float: right;
        margin: - (tn-space(s)/2);
    }
    &__close {
        @include tn-button-reset;  //removes default button chrome
        color: tn-color(text-inverse, 1);
        width: tn-space(m); //best practice hit space
        height: tn-space(m);
}

    // Modifiers
    &--warning {
      background-color: $tn-alert-background-color--warning;
    }
    &--error {
      background-color: $tn-alert-background-color--error;
    }


}
